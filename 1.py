#мин выпуклая оболочка на основе алгоритма Джарвиса
def rot_angl(p, q, r):
    val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1])#направление поворота точек
    if val == 0:
        return 0
    elif val > 0:  #образуют правый поворот(против часовой)
        return 1
    else:
        return 2
def MCH(A):
    n = len(points) #количество точек
    if n < 3:
      return points
    hull = [] #список для хранения точек во
    
    # Находим начальную точку, самую левую точку
    l = 0
    for i in range(1, n):
        if points[i][0] < points[l][0]:
            l = i
    p = l
    q = 0
    
    while True:
        hull.append(points[p]) #добавляем текущую точку в оболочку
        q = (p + 1) % n #обновляем следущую точку
        for i in range(n):
            if rot_angl(points[p], points[i], points[q]) == 2:
                q = i #обновляем q
        p = q  #обновляем текущую точку
        if p == l:  #если мы вернулись к начальной точке, завершаем построение оболочки
            break
    return hull
points = [(3, 9), (5, 8), (1, 8), (6, 6), (1, 9), (2, 4), (10, 15), (13, 8)]
hull = MCH(points)
print(hull)
# Оболочкой этого множества называется любая замкнутая линия H без
# самопересечений такая, что все точки из A лежат внутри этой кривой.
# минимальной выпуклой оболочкой (далее кратко МВО) называется выпуклая
# оболочка минимальной длины (минимального периметра)
